name: Merge

on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  codeql:
    uses: ./.github/workflows/codeql.yaml

    permissions:
      actions: read
      contents: read
      security-events: write

  scorecard:
    uses: ./.github/workflows/openssf-scorecard.yaml

    permissions:
      contents: read
      security-events: write
      id-token: write

  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    outputs:
      releases_created: ${{ steps.release_please.outputs.releases_created }}
      outputs: ${{ toJSON(steps.release_please.outputs) }}

    steps:
      - uses: step-security/harden-runner@55d479fb1c5bcad5a4f9099a5d9f37c8857b2845 # v2.4.1
        with:
          egress-policy: audit
      - id: release_please
        uses: google-github-actions/release-please-action@ca6063f4ed81b55db15b8c42d1b6f7925866342d # v3.7.11
        with:
          command: manifest
          monorepo-tags: true

  container_releases_matrix:
    if: ${{ needs.release.outputs.releases_created }}
    runs-on: ubuntu-latest

    needs:
      - release

    outputs:
      matrix: ${{ steps.matrix.outputs.result }}
      releases: ${{ steps.releases.outputs.result }}

    steps:
      - uses: step-security/harden-runner@55d479fb1c5bcad5a4f9099a5d9f37c8857b2845 # v2.4.1
        with:
          egress-policy: audit
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        id: releases
        env:
          OUTPUTS: ${{ needs.release.outputs.outputs }}
        with:
          script: |
            const outputs=JSON.parse(process.env.OUTPUTS);

            var releases = {};

            let paths = JSON.parse(outputs.paths_released)

            paths.forEach(path => {
              if (path.startsWith('containers/')) {
                  var release = {};
                  Object.keys(outputs).filter(name => name.startsWith(`${path}--`)).forEach(key => {
                    release[key.replace(`${path}--`,'')]=outputs[key]
                  });
                }
                releases[path]=release
            });

            return releases
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        id: matrix
        env:
          RELEASES: ${{ steps.releases.outputs.result }}
        with:
          script: |
            const releases=JSON.parse(process.env.RELEASES);

            return Object.keys(releases).filter(name => releases[name].release_created == 'true')

  container_build_release:
    if: ${{needs.container_releases_matrix.outputs.matrix != '[]'}}
    needs:
      - codeql
      - container_releases_matrix

    permissions:
      contents: read
      packages: write
      security-events: write

    strategy:
      fail-fast: false

      matrix:
        path: ${{ fromJSON(needs.container_releases_matrix.outputs.matrix) }}

    uses: ./.github/workflows/container-build.yaml
    with:
      path: ${{ matrix.path }}
      release: ${{ toJson(fromJSON(needs.container_releases_matrix.outputs.releases)[matrix.path]) }}

  container_changes_matrix:
    if: ${{ !needs.release.outputs.releases_created }}
    runs-on: ubuntu-latest

    needs:
      - release

    outputs:
      matrix: ${{ steps.changes.outputs.changes }}

    steps:
      - uses: step-security/harden-runner@55d479fb1c5bcad5a4f9099a5d9f37c8857b2845 # v2.4.1
        with:
          egress-policy: audit
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          sparse-checkout: |
            containers
          fetch-depth: 0
      - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        id: filters
        env:
          WORKSPACE: ${{ github.workspace }}
        with:
          result-encoding: string
          script: |
            const workspace = process.env.WORKSPACE
            const globber = await glob.create('containers/*/Dockerfile');
            var output = "";
            for await (const file of globber.globGenerator()) {
              core.debug(`Found: ${file} => ${file.replace(`${workspace}/`,'')}`);
              var path = file.replace(`${workspace}/`,'').split('/').slice(0,-1).join('/');
              output += `${path}:
                - '${path}/**'`;
            }
            return output
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          filters: ${{ steps.filters.outputs.result }}

  container_build_change:
    if: ${{needs.container_changes_matrix.outputs.matrix != '[]'}}

    needs:
      - codeql
      - container_changes_matrix

    permissions:
      contents: read
      packages: write
      security-events: write

    strategy:
      fail-fast: false

      matrix:
        path: ${{ fromJSON(needs.container_changes_matrix.outputs.matrix) }}

    uses: ./.github/workflows/container-build.yaml
    with:
      path: ${{ matrix.path }}
